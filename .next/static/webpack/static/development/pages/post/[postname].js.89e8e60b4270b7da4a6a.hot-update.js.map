{"version":3,"file":"static/webpack/static/development/pages/post/[postname].js.89e8e60b4270b7da4a6a.hot-update.js","sources":["webpack:///./pages/post/[postname].js"],"sourcesContent":["import matter from 'gray-matter'\nimport ReactMarkdown from 'react-markdown'\n\nimport Layout from '../../components/Layout'\n\nexport default function BlogTemplate(props) {\n  console.log(props)\n\n  if (!props.frontmatter) return <></>\n\n  return (\n    <Layout siteTitle={props.siteTitle}>\n      <article>\n        <h1>{props.frontmatter.title}</h1>\n        <div>\n          <ReactMarkdown source={props.markdownBody} />\n        </div>\n      </article>\n    </Layout>\n  )\n}\n\nexport async function getStaticProps({ ...ctx }) {\n  const { slug } = ctx.params\n  const content = await import(`../../posts/${slug}.md`)\n  const config = await import(`../../siteconfig.json`)\n  const data = matter(content.default)\n\n  console.log('content')\n  console.log(content)\n\n  return {\n    props: {\n      siteTitle: config.title,\n      frontmatter: data.data,\n      markdownBody: data.content,\n    },\n  }\n}\n\nexport async function getStaticPaths() {\n  const blogSlugs = ((context) => {\n    const keys = context.keys()\n    const values = keys.map(context)\n\n    const data = keys.map((key, index) => {\n      // Create slug from filename\n      let slug = key.replace(/^.*[\\\\\\/]/, '').slice(0, -3)\n\n      return slug\n    })\n    return data\n  })(require.context('../../posts', true, /\\.md$/))\n\n  console.log(posts)\n\n  //   const blogs = glob.sync('../../posts/**/*.md')\n\n  //   console.log('dem blogs')\n  //   console.log(blogs)\n\n  //   const blogSlugs = blogs.map((file) =>\n  //     file.split('/')[2].replace(/ /g, '-').slice(0, -3).trim()\n  //   )\n\n  console.log('sluuuug')\n  console.log(blogSlugs)\n\n  const paths = blogSlugs.map((slug) => `/post/${slug}`)\n\n  return {\n    paths, // An array of path names, and any params\n    fallback: false, // so that 404s properly appear if something's not matching\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AACA;AAEA;;AAEA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;A","sourceRoot":""}