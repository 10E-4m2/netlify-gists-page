{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport matter from 'gray-matter';\nimport ReactMarkdown from 'react-markdown';\n\nconst glob = require('glob');\n\nimport Layout from '../../components/Layout';\nexport default function BlogTemplate(props) {\n  console.log(props);\n  if (!props.frontmatter) return __jsx(React.Fragment, null);\n  return __jsx(Layout, {\n    siteTitle: props.siteTitle\n  }, __jsx(\"article\", null, __jsx(\"h1\", null, props.frontmatter.title), __jsx(\"div\", null, __jsx(ReactMarkdown, {\n    source: props.markdownBody\n  }))));\n}\nexport async function getStaticProps(_ref) {\n  let ctx = Object.assign({}, _ref);\n  const {\n    slug\n  } = ctx.params;\n  const content = await import(`../../posts/${slug}.md`);\n  const config = await import(`../../siteconfig.json`);\n  const data = matter(content.default);\n  console.log('content');\n  console.log(content);\n  return {\n    props: {\n      siteTitle: config.title,\n      frontmatter: data.data,\n      markdownBody: data.content\n    }\n  };\n}\nexport async function getStaticPaths() {\n  const blogs = glob.sync('src/posts/**/*.md');\n  console.log('dem blogs');\n  console.log(blogs);\n  const blogSlugs = blogs.map(file => file.split('/')[2].replace(/ /g, '-').slice(0, -3).trim());\n  console.log('sluuuug');\n  console.log(blogSlugs);\n  const paths = blogSlugs.map(slug => `/post/${slug}`);\n  return {\n    paths,\n    // An array of path names, and any params\n    fallback: false // so that 404s properly appear if something's not matching\n\n  };\n}","map":null,"metadata":{},"sourceType":"module"}