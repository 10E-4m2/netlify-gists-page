{"ast":null,"code":"var _jsxFileName = \"/Users/cassidywilliams/GitHub/next-netlify-blog-starter/pages/post/[postname].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport matter from 'gray-matter';\nimport ReactMarkdown from 'react-markdown';\nimport Layout from '../../components/Layout';\nexport default function BlogTemplate(props) {\n  return __jsx(Layout, {\n    siteTitle: props.siteTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, __jsx(\"article\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, props.frontmatter.title), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, __jsx(ReactMarkdown, {\n    source: props.markdownBody,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 11\n    }\n  }))));\n}\nexport async function getStaticProps(_ref) {\n  let ctx = Object.assign({}, _ref);\n  const {\n    slug\n  } = ctx.params;\n  const content = await import(`../../posts/${slug}.md`);\n  const config = await import(`../../data/config.json`);\n  const data = matter(content.default);\n  console.log(data0);\n  return {\n    props: {\n      siteTitle: config.title,\n      frontmatter: data.data,\n      markdownBody: data.content\n    }\n  };\n}\nexport async function getStaticPaths() {\n  const blogs = glob.sync('src/posts/*.md');\n  const blogSlugs = blogs.map(file => file.split('/')[2].replace(/ /g, '-').slice(0, -3).trim());\n  console.log(blogSlugs);\n  const paths = blogSlugs.map(slug => `/post/${slug}`);\n  return {\n    paths,\n    // An array of path names, and any params\n    fallback: false // so that 404s properly appear if something's not matching\n\n  };\n}","map":{"version":3,"sources":["/Users/cassidywilliams/GitHub/next-netlify-blog-starter/pages/post/[postname].js"],"names":["matter","ReactMarkdown","Layout","BlogTemplate","props","siteTitle","frontmatter","title","markdownBody","getStaticProps","ctx","slug","params","content","config","data","default","console","log","data0","getStaticPaths","blogs","glob","sync","blogSlugs","map","file","split","replace","slice","trim","paths","fallback"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,aAAnB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AAEA,OAAOC,MAAP,MAAmB,yBAAnB;AAEA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC1C,SACE,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAEA,KAAK,CAACC,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,KAAK,CAACE,WAAN,CAAkBC,KAAvB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AAAe,IAAA,MAAM,EAAEH,KAAK,CAACI,YAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CADF,CADF;AAUD;AAED,OAAO,eAAeC,cAAf,OAA0C;AAAA,MAAPC,GAAO;AAC/C,QAAM;AAAEC,IAAAA;AAAF,MAAWD,GAAG,CAACE,MAArB;AACA,QAAMC,OAAO,GAAG,MAAM,OAAQ,eAAcF,IAAK,KAA3B,CAAtB;AACA,QAAMG,MAAM,GAAG,MAAM,OAAQ,wBAAR,CAArB;AACA,QAAMC,IAAI,GAAGf,MAAM,CAACa,OAAO,CAACG,OAAT,CAAnB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AAEA,SAAO;AACLf,IAAAA,KAAK,EAAE;AACLC,MAAAA,SAAS,EAAES,MAAM,CAACP,KADb;AAELD,MAAAA,WAAW,EAAES,IAAI,CAACA,IAFb;AAGLP,MAAAA,YAAY,EAAEO,IAAI,CAACF;AAHd;AADF,GAAP;AAOD;AAED,OAAO,eAAeO,cAAf,GAAgC;AACrC,QAAMC,KAAK,GAAGC,IAAI,CAACC,IAAL,CAAU,gBAAV,CAAd;AAEA,QAAMC,SAAS,GAAGH,KAAK,CAACI,GAAN,CAAWC,IAAD,IAC1BA,IAAI,CAACC,KAAL,CAAW,GAAX,EAAgB,CAAhB,EAAmBC,OAAnB,CAA2B,IAA3B,EAAiC,GAAjC,EAAsCC,KAAtC,CAA4C,CAA5C,EAA+C,CAAC,CAAhD,EAAmDC,IAAnD,EADgB,CAAlB;AAIAb,EAAAA,OAAO,CAACC,GAAR,CAAYM,SAAZ;AAEA,QAAMO,KAAK,GAAGP,SAAS,CAACC,GAAV,CAAed,IAAD,IAAW,SAAQA,IAAK,EAAtC,CAAd;AAEA,SAAO;AACLoB,IAAAA,KADK;AACE;AACPC,IAAAA,QAAQ,EAAE,KAFL,CAEY;;AAFZ,GAAP;AAID","sourcesContent":["import matter from 'gray-matter'\nimport ReactMarkdown from 'react-markdown'\n\nimport Layout from '../../components/Layout'\n\nexport default function BlogTemplate(props) {\n  return (\n    <Layout siteTitle={props.siteTitle}>\n      <article>\n        <h1>{props.frontmatter.title}</h1>\n        <div>\n          <ReactMarkdown source={props.markdownBody} />\n        </div>\n      </article>\n    </Layout>\n  )\n}\n\nexport async function getStaticProps({ ...ctx }) {\n  const { slug } = ctx.params\n  const content = await import(`../../posts/${slug}.md`)\n  const config = await import(`../../data/config.json`)\n  const data = matter(content.default)\n\n  console.log(data0)\n\n  return {\n    props: {\n      siteTitle: config.title,\n      frontmatter: data.data,\n      markdownBody: data.content,\n    },\n  }\n}\n\nexport async function getStaticPaths() {\n  const blogs = glob.sync('src/posts/*.md')\n\n  const blogSlugs = blogs.map((file) =>\n    file.split('/')[2].replace(/ /g, '-').slice(0, -3).trim()\n  )\n\n  console.log(blogSlugs)\n\n  const paths = blogSlugs.map((slug) => `/post/${slug}`)\n\n  return {\n    paths, // An array of path names, and any params\n    fallback: false, // so that 404s properly appear if something's not matching\n  }\n}\n"]},"metadata":{},"sourceType":"module"}