{"ast":null,"code":"var _jsxFileName = \"/Users/cassidywilliams/GitHub/next-netlify-blog-starter/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport matter from 'gray-matter';\nimport Layout from '../components/Layout';\nimport PostList from '../components/PostList';\n\nconst Index = props => {\n  return __jsx(React.Fragment, null, __jsx(Layout, {\n    pathname: \"/\",\n    siteTitle: props.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, \"Welcome to my blog!\"), __jsx(\"p\", {\n    className: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, \"This is a simple blog built with Next, easily deployable on\", ' ', __jsx(\"a\", {\n    href: \"https://url.netlify.com/r1j6ybSYU\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }\n  }, \"Netlify\"), \".\"), __jsx(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, __jsx(PostList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default Index;\nexport async function getStaticProps() {\n  const configData = await import(`../siteconfig.json`);\n\n  const posts = (context => {\n    const keys = context.keys();\n    const values = keys.map(context);\n    const data = keys.map((key, index) => {\n      // Create slug from filename\n      console.log(key); // const slug = key\n      //   .replace(/^.*[\\\\\\/]/, '')\n      //   .split('.')\n      //   .slice(0, -1)\n      //   .join('.')\n\n      let slug = 'demo-post';\n      const value = values[index]; // Parse yaml metadata & markdownbody in document\n\n      const document = matter(value.default);\n      return {\n        frontmatter: document.data,\n        markdownBody: document.content,\n        slug\n      };\n    });\n    return data;\n  })(require.context('../posts', true, /\\.md$/));\n\n  console.log(posts);\n  return {\n    props: {\n      allBlogs: posts,\n      title: configData.default.title,\n      description: configData.default.description\n    }\n  };\n}","map":{"version":3,"sources":["/Users/cassidywilliams/GitHub/next-netlify-blog-starter/pages/index.js"],"names":["matter","Layout","PostList","Index","props","title","getStaticProps","configData","posts","context","keys","values","map","data","key","index","console","log","slug","value","document","default","frontmatter","markdownBody","content","require","allBlogs","description"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,aAAnB;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACvB,SACE,4BACE,MAAC,MAAD;AAAQ,IAAA,QAAQ,EAAC,GAAjB;AAAqB,IAAA,SAAS,EAAEA,KAAK,CAACC,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAGE;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oEAC8D,GAD9D,EAEE;AAAG,IAAA,IAAI,EAAC,mCAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,MAHF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAPF,CADF,CADF;AAeD,CAhBD;;AAkBA,eAAeF,KAAf;AAEA,OAAO,eAAeG,cAAf,GAAgC;AACrC,QAAMC,UAAU,GAAG,MAAM,OAAQ,oBAAR,CAAzB;;AAEA,QAAMC,KAAK,GAAG,CAAEC,OAAD,IAAa;AAC1B,UAAMC,IAAI,GAAGD,OAAO,CAACC,IAAR,EAAb;AACA,UAAMC,MAAM,GAAGD,IAAI,CAACE,GAAL,CAASH,OAAT,CAAf;AAEA,UAAMI,IAAI,GAAGH,IAAI,CAACE,GAAL,CAAS,CAACE,GAAD,EAAMC,KAAN,KAAgB;AACpC;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ,EAFoC,CAIpC;AACA;AACA;AACA;AACA;;AACA,UAAII,IAAI,GAAG,WAAX;AACA,YAAMC,KAAK,GAAGR,MAAM,CAACI,KAAD,CAApB,CAVoC,CAWpC;;AACA,YAAMK,QAAQ,GAAGpB,MAAM,CAACmB,KAAK,CAACE,OAAP,CAAvB;AACA,aAAO;AACLC,QAAAA,WAAW,EAAEF,QAAQ,CAACP,IADjB;AAELU,QAAAA,YAAY,EAAEH,QAAQ,CAACI,OAFlB;AAGLN,QAAAA;AAHK,OAAP;AAKD,KAlBY,CAAb;AAmBA,WAAOL,IAAP;AACD,GAxBa,EAwBXY,OAAO,CAAChB,OAAR,CAAgB,UAAhB,EAA4B,IAA5B,EAAkC,OAAlC,CAxBW,CAAd;;AA0BAO,EAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AAEA,SAAO;AACLJ,IAAAA,KAAK,EAAE;AACLsB,MAAAA,QAAQ,EAAElB,KADL;AAELH,MAAAA,KAAK,EAAEE,UAAU,CAACc,OAAX,CAAmBhB,KAFrB;AAGLsB,MAAAA,WAAW,EAAEpB,UAAU,CAACc,OAAX,CAAmBM;AAH3B;AADF,GAAP;AAOD","sourcesContent":["import matter from 'gray-matter'\n\nimport Layout from '../components/Layout'\nimport PostList from '../components/PostList'\n\nconst Index = (props) => {\n  return (\n    <>\n      <Layout pathname=\"/\" siteTitle={props.title}>\n        <h1 className=\"title\">Welcome to my blog!</h1>\n\n        <p className=\"description\">\n          This is a simple blog built with Next, easily deployable on{' '}\n          <a href=\"https://url.netlify.com/r1j6ybSYU\">Netlify</a>.\n        </p>\n        <main>\n          <PostList />\n        </main>\n      </Layout>\n    </>\n  )\n}\n\nexport default Index\n\nexport async function getStaticProps() {\n  const configData = await import(`../siteconfig.json`)\n\n  const posts = ((context) => {\n    const keys = context.keys()\n    const values = keys.map(context)\n\n    const data = keys.map((key, index) => {\n      // Create slug from filename\n      console.log(key)\n\n      // const slug = key\n      //   .replace(/^.*[\\\\\\/]/, '')\n      //   .split('.')\n      //   .slice(0, -1)\n      //   .join('.')\n      let slug = 'demo-post'\n      const value = values[index]\n      // Parse yaml metadata & markdownbody in document\n      const document = matter(value.default)\n      return {\n        frontmatter: document.data,\n        markdownBody: document.content,\n        slug,\n      }\n    })\n    return data\n  })(require.context('../posts', true, /\\.md$/))\n\n  console.log(posts)\n\n  return {\n    props: {\n      allBlogs: posts,\n      title: configData.default.title,\n      description: configData.default.description,\n    },\n  }\n}\n"]},"metadata":{},"sourceType":"module"}