{"ast":null,"code":"var _jsxFileName = \"/Users/cassidywilliams/GitHub/next-netlify-blog-starter/pages/post/[postname].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport matter from 'gray-matter';\nimport ReactMarkdown from 'react-markdown';\n\nconst glob = require('glob');\n\nimport fs from 'fs';\nimport path from 'path';\nimport Layout from '../../components/Layout';\nexport default function BlogTemplate(props) {\n  console.log(props);\n  if (!props.frontmatter) return __jsx(React.Fragment, null);\n  return __jsx(Layout, {\n    siteTitle: props.siteTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, __jsx(\"article\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, props.frontmatter.title), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, __jsx(ReactMarkdown, {\n    source: props.markdownBody,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }))));\n}\nexport function getAllPostIds() {\n  const fileNames = fs.readdirSync(postsDirectory);\n  return fileNames.map(fileName => {\n    return {\n      params: {\n        id: fileName.replace(/\\.md$/, '')\n      }\n    };\n  });\n}\nexport async function getStaticProps(_ref) {\n  let ctx = Object.assign({}, _ref);\n  const {\n    slug\n  } = ctx.params;\n  const content = await import(`../../posts/${slug}.md`);\n  const config = await import(`../../siteconfig.json`);\n  const data = matter(content.default);\n  console.log('content');\n  console.log(content);\n  return {\n    props: {\n      siteTitle: config.title,\n      frontmatter: data.data,\n      markdownBody: data.content\n    }\n  };\n}\nexport async function getStaticPaths() {\n  //   const blogs = glob.sync('src/posts/**/*.md')\n  //   console.log('dem blogs')\n  //   console.log(blogs)\n  //   const blogSlugs = blogs.map((file) =>\n  //     file.split('/')[2].replace(/ /g, '-').slice(0, -3).trim()\n  //   )\n  //   console.log('sluuuug')\n  //   console.log(blogSlugs)\n  //   const paths = blogSlugs.map((slug) => `/post/${slug}`)\n  return {\n    paths: getAllPostIds(),\n    // An array of path names, and any params\n    fallback: false // so that 404s properly appear if something's not matching\n\n  };\n}","map":{"version":3,"sources":["/Users/cassidywilliams/GitHub/next-netlify-blog-starter/pages/post/[postname].js"],"names":["matter","ReactMarkdown","glob","require","fs","path","Layout","BlogTemplate","props","console","log","frontmatter","siteTitle","title","markdownBody","getAllPostIds","fileNames","readdirSync","postsDirectory","map","fileName","params","id","replace","getStaticProps","ctx","slug","content","config","data","default","getStaticPaths","paths","fallback"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,aAAnB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;;AACA,MAAMC,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AAEA,OAAOC,EAAP,MAAe,IAAf;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,OAAOC,MAAP,MAAmB,yBAAnB;AAEA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC1CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEA,MAAI,CAACA,KAAK,CAACG,WAAX,EAAwB,OAAO,2BAAP;AAExB,SACE,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAEH,KAAK,CAACI,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKJ,KAAK,CAACG,WAAN,CAAkBE,KAAvB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AAAe,IAAA,MAAM,EAAEL,KAAK,CAACM,YAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CADF,CADF;AAUD;AAED,OAAO,SAASC,aAAT,GAAyB;AAC9B,QAAMC,SAAS,GAAGZ,EAAE,CAACa,WAAH,CAAeC,cAAf,CAAlB;AAEA,SAAOF,SAAS,CAACG,GAAV,CAAeC,QAAD,IAAc;AACjC,WAAO;AACLC,MAAAA,MAAM,EAAE;AACNC,QAAAA,EAAE,EAAEF,QAAQ,CAACG,OAAT,CAAiB,OAAjB,EAA0B,EAA1B;AADE;AADH,KAAP;AAKD,GANM,CAAP;AAOD;AAED,OAAO,eAAeC,cAAf,OAA0C;AAAA,MAAPC,GAAO;AAC/C,QAAM;AAAEC,IAAAA;AAAF,MAAWD,GAAG,CAACJ,MAArB;AACA,QAAMM,OAAO,GAAG,MAAM,OAAQ,eAAcD,IAAK,KAA3B,CAAtB;AACA,QAAME,MAAM,GAAG,MAAM,OAAQ,uBAAR,CAArB;AACA,QAAMC,IAAI,GAAG7B,MAAM,CAAC2B,OAAO,CAACG,OAAT,CAAnB;AAEArB,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYiB,OAAZ;AAEA,SAAO;AACLnB,IAAAA,KAAK,EAAE;AACLI,MAAAA,SAAS,EAAEgB,MAAM,CAACf,KADb;AAELF,MAAAA,WAAW,EAAEkB,IAAI,CAACA,IAFb;AAGLf,MAAAA,YAAY,EAAEe,IAAI,CAACF;AAHd;AADF,GAAP;AAOD;AAED,OAAO,eAAeI,cAAf,GAAgC;AACrC;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA,SAAO;AACLC,IAAAA,KAAK,EAAEjB,aAAa,EADf;AACmB;AACxBkB,IAAAA,QAAQ,EAAE,KAFL,CAEY;;AAFZ,GAAP;AAID","sourcesContent":["import matter from 'gray-matter'\nimport ReactMarkdown from 'react-markdown'\nconst glob = require('glob')\n\nimport fs from 'fs'\nimport path from 'path'\n\nimport Layout from '../../components/Layout'\n\nexport default function BlogTemplate(props) {\n  console.log(props)\n\n  if (!props.frontmatter) return <></>\n\n  return (\n    <Layout siteTitle={props.siteTitle}>\n      <article>\n        <h1>{props.frontmatter.title}</h1>\n        <div>\n          <ReactMarkdown source={props.markdownBody} />\n        </div>\n      </article>\n    </Layout>\n  )\n}\n\nexport function getAllPostIds() {\n  const fileNames = fs.readdirSync(postsDirectory)\n\n  return fileNames.map((fileName) => {\n    return {\n      params: {\n        id: fileName.replace(/\\.md$/, ''),\n      },\n    }\n  })\n}\n\nexport async function getStaticProps({ ...ctx }) {\n  const { slug } = ctx.params\n  const content = await import(`../../posts/${slug}.md`)\n  const config = await import(`../../siteconfig.json`)\n  const data = matter(content.default)\n\n  console.log('content')\n  console.log(content)\n\n  return {\n    props: {\n      siteTitle: config.title,\n      frontmatter: data.data,\n      markdownBody: data.content,\n    },\n  }\n}\n\nexport async function getStaticPaths() {\n  //   const blogs = glob.sync('src/posts/**/*.md')\n\n  //   console.log('dem blogs')\n  //   console.log(blogs)\n\n  //   const blogSlugs = blogs.map((file) =>\n  //     file.split('/')[2].replace(/ /g, '-').slice(0, -3).trim()\n  //   )\n\n  //   console.log('sluuuug')\n  //   console.log(blogSlugs)\n\n  //   const paths = blogSlugs.map((slug) => `/post/${slug}`)\n\n  return {\n    paths: getAllPostIds(), // An array of path names, and any params\n    fallback: false, // so that 404s properly appear if something's not matching\n  }\n}\n"]},"metadata":{},"sourceType":"module"}